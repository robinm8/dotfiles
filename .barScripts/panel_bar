#! /bin/sh

if [ $(pgrep -cx panel) -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

flavor=${1:-bar}

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $PANEL_HEIGHT


# Colorscheme for mocha
#BLUE="%{F#FF8AB3B5}"
#RED="%{F#FFCB6077}"
#YELLOW="%{F#FFF4BC87}"
#ORANGE="%{F#FFD28B71}"
#MAGENTA="%{F#FFA89BB9}"
#TEAL="%{F#FF7BBdA4}"
#LIGHTGREY="%{F#FFb8AfAD}"
#DARKGREY="%{F#FF7E705A}"
#GREEN="%{F#FF90A950}"
#PURPLE="%{F#FF9547C9}"
#BG="%{F#FF3B3228}"

# Colorscheme for default-dark
BLUE="%{F#FF5F819D}"
LIGHTBLUE="%{F#FF81A2BE}"
RED="%{F#FFA54242}"
LIGHTRED="%{F#FFCC6666}"
YELLOW="%{F#FFF0C674}"
ORANGE="%{F#FFDE935F}"
MAGENTA="%{F#FF85678F}"
TEAL="%{F#FF5E8D87}"
LIGHTGREY="%{F#FFC5C8C6}"
DARKGREY="%{F#FF707880}"
GREEN="%{F#FF8C9440}"
LIGHTGREEN="%{F#FFB5BD68}"
PURPLE="%{F#FF9547C9}"
BG="%{F#FF151515}"

bspc control --subscribe > "$PANEL_FIFO" &
xtitle -sf 'T%s' > "$PANEL_FIFO" &
echo 'E' $LIGHTGREEN' '$DARKGREY'Fenriz' $TEAL > "$PANEL_FIFO" &

panel_emailStatus()
{
	icon=""
	# if totalemail doesn't exist in the /tmp dir.
	if [ ! -f /tmp/totalemail ];
	then
		echo $DARKGREY$icon  $DARKGREY 0
		# it exists
	else
		totalEmail=$(cat /tmp/totalemail)
		if [ $totalEmail -gt 0 ];
		then
			icon=""
			echo $LIGHTRED$icon  $DARKGREY$totalEmail
		else
			icon=""
			echo $DARKGREY$icon  $DARKGREY$totalEmail
		fi
	fi
}

panel_volicon()
{
        volStatus=$(amixer get Master | tail -n 1 | cut -d '[' -f 4 | sed 's/].*//g')
        headphone=$(amixer -c 0 contents | grep 17 -A 2 | awk 'NR==3 { print $2 }' | cut -d '=' -f 2)

        if [ "$volStatus" == "on" ] && [ "$headphone" == "off" ];
                then echo $LIGHTGREY " ⮞"
        elif [ "$volStatus" == "on" ] && [ "$headphone" == "on" ];
                then echo $LIGHTGREY "♪"
        elif [ "$volStatus" == "off" ] && [ "$headphone" == "on" ];
                then echo $LIGHTRED "♪"
        elif [ "$volStatus" == "off" ] && [ "$headphone" == "off" ];
                then echo $LIGHTRED " ⮝"
	else echo "foo"
        fi
}

panel_volume()
{

        volStatus=$(amixer get Master | tail -n 1 | cut -d '[' -f 4 | sed 's/].*//g')
        volLevel=$(amixer get Master | tail -n 1 | cut -d '[' -f 2 | sed 's/\%].*//g')
        case $volLevel in
		#100)    if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY"——————————"
		#else echo $(panel_volicon) $RED"——————————"
                #        fi
                #        ;;
		#[0-9]) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY"—"$BG"—————————"
		#else echo $(panel_volicon) $RED"—"$BG"—————————"
                #        fi
                #        ;;
		#1*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY"——"$BG"————————"
		#else echo $(panel_volicon) $RED"——"$BG"————————"
                #        fi
                #        ;;
		#2*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY"———"$BG"———————"
		#else echo $(panel_volicon) $RED"———"$BG"———————"
                #        fi
                #        ;;
		#3*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY"————"$BG"——————"
		#else echo $(panel_volicon) $RED"————"$BG"——————"
                #        fi
                #        ;;
		#4*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY"—————"$BG"—————"
		#else echo $(panel_volicon) $RED"—————"$BG"—————"
                #        fi
                #        ;;
		#5*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY"——————"$BG"————"
		#else echo $(panel_volicon) $RED"——————"$BG"————"
                #        fi
                #        ;;
		#6*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY"———————"$BG"———"
		#else echo $(panel_volicon) $RED"———————"$BG"———"
                #        fi
                #        ;;
		#7*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY"————————"$BG"——"
		#else echo $(panel_volicon) $RED"————————"$BG"——"
                #        fi
                #        ;;
		#8*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY"——————————"$BG"—"
		#else echo $(panel_volicon) $RED"——————————"$BG"—"
                #        fi
                #        ;;
		#9*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY"——————————"
		#else echo $(panel_volicon) $RED"——————————"
                #        fi
                #        ;;

		100)    if [ "$volStatus" == "on" ]; then echo $(panel_volicon) $LIGHTGREY$volLevel
		else echo $(panel_volicon) $LIGHTRED$volLevel
                        fi
                        ;;
		[0-9]) if [ "$volStatus" == "on" ]; then echo $(panel_volicon) $LIGHTGREY$volLevel
		else echo $(panel_volicon) $LIGHTRED$volLevel
                        fi
                        ;;
		1*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon) $LIGHTGREY$volLevel
		else echo $(panel_volicon) $LIGHTRED$volLevel
                        fi
                        ;;
		2*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon) $LIGHTGREY$volLevel
		else echo $(panel_volicon) $LIGHTRED$volLevel
                        fi
                        ;;
		3*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY$volLevel
		else echo $(panel_volicon) $LIGHTRED$volLevel
                        fi
                        ;;
		4*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY$volLevel
		else echo $(panel_volicon) $LIGHTRED$volLevel
                        fi
                        ;;
		5*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY$volLevel
		else echo $(panel_volicon) $LIGHTRED$volLevel
                        fi
                        ;;
		6*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY$volLevel
		else echo $(panel_volicon) $LIGHTRED$volLevel
                        fi
                        ;;
		7*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY$volLevel
		else echo $(panel_volicon) $LIGHTRED$volLevel
                        fi
                        ;;
		8*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY$volLevel
		else echo $(panel_volicon) $LIGHTRED$volLevel
                        fi
                        ;;
		9*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $LIGHTGREY$volLevel
		else echo $(panel_volicon) $LIGHTRED$volLevel
                        fi
                        ;;

        esac
}

panel_sigStrength()
{
        signalStrength=$(cat /proc/net/wireless | awk 'NR==3 { print $3}' | sed 's/\.//')
	isEthernet=$(connmanctl technologies | awk '/Connected/ { print $NF }')

	final=$(echo $isEthernet | awk '{print $1}')

	if [ "$final" == "True" ]
	then
                echo $LIGHTBLUE "Wired "
        elif [ "$signalStrength" -gt 64 ]
        then
                echo $LIGHTBLUE "‗▬▪▮"
        elif [ "$signalStrength" -lt 65 ] && [ "$signalStrength" -gt 39 ]
        then
                echo $LIGHTBLUE " ‗▬▪"$DARKGREY"▮"$LIGHTBLUE
        elif [ "$signalStrength" -lt 40 ]
        then
                echo $LIGHTBLUE " ‗▬"$DARKGREY"▪▮"$LIGHTBLUE
        else
                echo $DARKGREY " ‗▬▪▮ Connecting..."
        fi
}

panel_essid()
{
	echo $YELLOW $(panel_sigStrength) $(essid -w wlp2s0)
}

panel_battery()
{
        batStats=$(acpi --battery | cut -d' ' -f3 | sed 's/,//')
        if [ "$batStats" == "" ]
        then
                echo $DARKGREY "AC"
        elif [ "$batStats" == "Charging" ]
        then
                echo $GREEN"" $(acpi --battery | cut -d' ' -f4 | sed 's/%,//')"+"
        elif [ "$batStats" == "Discharging" ]
        then
                echo $RED "" $(acpi --battery | cut -d' ' -f4 | sed 's/%,//')"-"
	elif [ "$batStats" == "Unknown" ]
	then
                echo $GREEN"⮒  Fully Charged"
        else    echo $YELLOW "Refreshing..."
        fi
}

panel_clock()
{
	echo $BLUE " " $(clock -f '%a %d %I:%M')
}

# Loop to check time, battery and volume statuses
while true; do
	echo "M"%{A:opengmail:} $(panel_emailStatus) $TEAL%{A} > "$PANEL_FIFO" &
	echo "S" $(panel_battery)%{A:startWicd:}$(panel_essid)%{A} $(panel_volume) $(panel_clock) > "$PANEL_FIFO" &
	sleep 0.5s
done &

. panel_colors

case "$flavor" in
	bar)
		#FONT_FAMILY='-benis-uushi-medium-r-normal--11-90-75-75-p-58-iso10646-1'
		FONT_FAMILY='-benis-lemon-medium-r-normal--10-110-75-75-m-50-iso8859-1'
		FONT_FAMILY2='-misc-xbmicons-Medium-R-Normal--12-120-72-72-C-60-ISO10646-1'
		cat "$PANEL_FIFO" | panel_bar | bar-aint-recursive -p -g 1394x15+22 -f "$FONT_FAMILY2","$FONT_FAMILY" -u 2 -F "$BG" -B "$BG" | while read action; do
			case $action in
				opengmail) onClickEmail
					;;
				startWicd) wicdScript
					;;
			esac
		done &
		;;
	dzen2)
		FONT_FAMILY='DejaVu Sans'
		FONT_SIZE=11
		cat "$PANEL_FIFO" | panel_dzen2 -f "$FONT_FAMILY" -s "$FONT_SIZE" | dzen2 -h $PANEL_HEIGHT -dock -ta l -title-name panel -fn "${FONT_FAMILY}:pixelsize=${FONT_SIZE}" -fg "$COLOR_FOREGROUND" -bg "$COLOR_BACKGROUND" &
		;;
esac

wait
